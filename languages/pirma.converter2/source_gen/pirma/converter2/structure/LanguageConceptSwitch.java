package pirma.converter2.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Binary = 0;
  public static final int Converter = 1;
  public static final int Decimal = 2;
  public static final int Hexadecimal = 3;
  public static final int Multiplication = 4;
  public static final int Output = 5;
  public static final int Representation = 6;
  public static final int Subtraction = 7;
  public static final int Sum = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x6d99193802404f50L, 0xadb0314a68e62940L);
    builder.put(0x516c37d7dbcd01b2L, Binary);
    builder.put(0x516c37d7dbccc86bL, Converter);
    builder.put(0x516c37d7dbcd0195L, Decimal);
    builder.put(0x425dade9355d32b6L, Hexadecimal);
    builder.put(0x1d170ed4451c52a4L, Multiplication);
    builder.put(0x425dade935520143L, Output);
    builder.put(0x516c37d7dbcd017aL, Representation);
    builder.put(0x425dade9355201b2L, Subtraction);
    builder.put(0x425dade93552017dL, Sum);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
