package pirma.converter2.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Binary_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Converter_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Decimal_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Hexadecimal_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Multiplication_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Subtraction_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Sum_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x516c37d7dbcd01b2L), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x516c37d7dbccc86bL), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x516c37d7dbcd0195L), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x425dade9355d32b6L), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x1d170ed4451c52a4L), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x425dade9355201b2L), MetaIdFactory.conceptId(0x6d99193802404f50L, 0xadb0314a68e62940L, 0x425dade93552017dL)).seal();
}
